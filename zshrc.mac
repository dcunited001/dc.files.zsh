#!/bin/zsh

export OS_TYPE=mac
export DOTFILES=$HOME/.files

export SHELL=zsh
export EDITOR=vim
export DEFAULT_USER="dc"

#switch to gnu-getopt
export FLAGS_GETOPT_CMD="$(brew --prefix gnu-getopt)/bin/getopt"

#load common zsh
[[ -e "$DOTFILES/zsh/zshrc" ]] && source $DOTFILES/zsh/zshrc

# add ~/bin
export PATH=$PATH:$HOME/bin

# add SML path
export PATH=$PATH:$HOME/dev/src/smlnj/bin

#android sdk
export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk

#node npm bins
export NPM_GLOBAL=/usr/local/share/npm/bin
export VAGRANT_PATH=/Applications/Vagrant/bin
PATH=$VAGRANT_PATH:$PATH:$NPM_GLOBAL:$ANDROID_SDK_ROOT/platform-tools

export JAVA_HOME=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
alias emacs='/Applications/Emacs.app/Contents/MacOS/Emacs -nw'

#rbenv
export RBENV_ROOT=/usr/local/var/rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# gmake and some compilation tools may override standard osx build tool binaries
# http://www.topbug.net/blog/2013/04/14/install-and-use-gnu-command-line-tools-in-mac-os-x/

# jenv
export PATH="$HOME/.jenv/bin:$PATH"

if which jenv > /dev/null; then eval "$(jenv init -)"; fi
